# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.8
        environment:
            GO_EXEC_NAME: orbitmanhttp
            GO_BUILD_PATH: ./main.go
            ORG_NAME: bgonza2017
            REPO_NAME: orbitmanhttp
            GO_EXEC_NAME: orbitmanhttp
            GO_BUILD_PATH: ./
            DOCKER_IMAGE_NAME: orbitmanhttp

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/{{ORG_NAME}}/{{REPO_NAME}}
    steps:
      # auth with gcloud
      - run:
          command: |
            echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcloud-service-key.json
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json
            cat ${HOME}/gcloud-service-key.json
            sudo /opt/google-cloud-sdk/bin/gcloud --quiet components update
            sudo /opt/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json
            sudo /opt/google-cloud-sdk/bin/gcloud config set project $PROJECT_ID


      #pull the source code
      - checkout


      # specify any bash command here prefixed with `run: `
      #- run: go get -v -t -d ./...
      - run: go test -v

      # execute the build
      - run: go build -o $GO_EXEC_NAME $GO_BUILD_PATH

      # setup docker
      - setup_remote_docker

      # build a new image with the commit sha1 as the tag
      - run: |
          docker build -t $DOCKER_REPO$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} .
          docker tag $DOCKER_REPO$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM} $DOCKER_REPO$DOCKER_IMAGE_NAME:latest
          /go/google-cloud-sdk/bin/gcloud docker -- push $DOCKER_REPO$DOCKER_IMAGE_NAME:${CIRCLE_BRANCH}_${CIRCLE_BUILD_NUM}
          /go/google-cloud-sdk/bin/gcloud docker -- push $DOCKER_REPO$DOCKER_IMAGE_NAME:latest
